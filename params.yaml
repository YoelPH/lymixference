# Define some default directories, which can then be used
# in the pipeline file `dvc.yaml`.
general:
  data: data/filtered.csv
  data_folder: data
  metrics: metrics.json
  plots_dir: plots
  history_dir: histories 

########################################################################################
# This dictionary defines which LNLs are present in the
# graph and how they are connected.
# graph:
#   tumor:
#     primary: [I, II, III, IV, V]
#   lnl:
#     I: [II]
#     II: [III]
#     III: [IV]
#     IV: []
#     V: []
graph:
  tumor:
    primary: [II]
  lnl:
    II: []


########################################################################################
# Below are some parameters necessary for the model setup:
model:
  class: Unilateral             # model class to use (see `lymph-model` docs)
  side: ipsi
  distributions:                # marginalize over diagnosis times. Keys are T-stages
    early:
      frozen: binomial
      max_time: 10
      kwargs: {p: 0.3}
    late:
      parametric: binomial
      max_time: 10
  num_components: 2
  likelihood_tolerance: 6
  # split_by: ("tumor", "1", "subsite")
  # keyword arguments to pass to the model constructor
  kwargs:

em:
  seed: 42

modalities:
  CT: [0.76, 0.81]
  MRI: [0.63, 0.81]
  PET: [0.86, 0.79]
  FNA: [0.98, 0.80]
  diagnostic_consensus: [0.86, 0.81]
  pathology: [1.0, 1.0]
  pCT: [0.86, 0.81]
  max_llh: [1.0, 1.0]

# these of the above modalities will be used to compute things
# like the naive maximum likelihood estimate of the true hidden
# state `max_llh`, or the `rank` "modality".
# The wird nested way of writing them down here is so that DVC can unpack the dict
# directly into the command.
data_cleaning_modalities:
  modalities:
  - CT
  - MRI
  - PET
  - FNA
  - diagnostic_consensus
  - pathology
  - pCT

# this lists the above defined modalities that will be used for
# inference and evaluation.
# The wird nested way of writing them down here is so that DVC can unpack the dict
# directly into the command.
inference_modalities:
  max_llh: [1.0, 1.0]

